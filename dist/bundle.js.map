{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/board/greenBackdrop.js","webpack:///./src/board/jumbotron.js","webpack:///./src/characters/mainCharacter.js","webpack:///./src/main.js","webpack:///./src/util/moveUtil.js","webpack:///./src/util/wallUtil.js","webpack:///./src/walls/breakableWalls.js","webpack:///./src/walls/staticWalls.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;ACLD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAA;AAA6C;;AAE9B;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA,K;AACA;AACA;;AAEA;AACA,yBAAyB,+DAAyB;AAClD;AACA;AACA;;AAEA,mC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qE;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACQ;AACN;AACM;AACA;AACT;;AAE9C;AACA,EAAE,oEAAkB;AACpB,EAAE,gEAAc;AAChB,EAAE,kEAAc;AAChB,EAAE,qEAAiB;AACnB,MAAM,iEAAa,CAAC,kEAAW;AAC/B,CAAC,E;;;;;;;;;;;;ACbD;AAAA;AAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,K;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,E;;;;;;;;;;;;ACxFA;AAAA;AAA6D;;AAE9C;AACf;AACA;AACA;AACA;;AAEA,2BAA2B,gFAAyB;AACpD;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,C;;;;;;;;;;;;ACdA;AAAA;AAI0B;;AAEX;AACf;AACA;AACA;AACA;;AAEA,wBAAwB,gFAAyB;AACjD,YAAY,8EAAuB;AACnC,YAAY,sEAAe;;AAE3B;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export default () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = '#3B8314';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\n","export default () => {\n  const canvas = document.querySelector('#jumbotron');\n  if (canvas.getContext) {\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = '#DDD';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  } else {\n    // one time alert in case browser does not support canvas\n    alert(\n      'Sorry. This games only operates' +\n      'on browsers that support HTML canvas.'\n    );\n  }\n}","import * as moveUtil from '../util/moveUtil';\n\nexport default class mainCharacter {\n  constructor(walls) {\n    const canvas = document.querySelector('#green-backdrop');\n    this.xPos = 50;\n    this.yPos = 50;\n    this.front = frontImg;\n    this.back = backImg;\n    this.left = leftImg;\n    this.right = rightImg;\n    this.ctx = canvas.getContext('2d');\n    this.render = this.render.bind(this);\n    this.walls = walls;\n    this.possibleMoves = [39, 40];\n    frontImg.addEventListener('load', () => {\n      this.ctx.drawImage(this.front, this.xPos, this.yPos);\n      window.addEventListener(\"keydown\", this.handleKeydown.bind(this));\n    });\n  }\n\n  handleKeydown(e) {\n    if (!this.possibleMoves.includes(e.keyCode)) return;\n\n    const oldXPos = this.xPos, oldYPos = this.yPos;\n    switch(e.keyCode) {\n      case 37:\n        this.xPos -= 50;\n        this.render(this.left, oldXPos, oldYPos);\n        break;\n      case 38:\n        this.yPos -= 50;\n        this.render(this.back, oldXPos, oldYPos);\n        break;\n      case 39:\n        this.xPos += 50;\n        this.render(this.right, oldXPos, oldYPos);\n        break;\n      case 40:\n        this.yPos += 50;\n        this.render(this.front, oldXPos, oldYPos);\n        break;  \n    } \n    this.getPossibleMoves();\n  }\n\n  getPossibleMoves() {\n    this.possibleMoves = moveUtil.getPossibleMoves(\n      this.walls, this.xPos, this.yPos\n    );\n  }\n\n  render(image, oldXPos, oldYPos) {  \n    this.ctx.fillStyle = '#3B8314';\n    this.ctx.fillRect(oldXPos, oldYPos, 50, 50);\n    this.ctx.drawImage(image, this.xPos, this.yPos);\n  }\n}\n\nconst frontImg = new Image();\nconst backImg = new Image();\nconst leftImg = new Image();\nconst rightImg = new Image();\nfrontImg.src = '../../public/gameImages/characters/fBomber.png';\nbackImg.src = '../../public/gameImages/characters/fBomberBack.png';\nleftImg.src = '../../public/gameImages/characters/fBomberLSide.png';\nrightImg.src = '../../public/gameImages/characters/fBomberRSide.png';","import setupJumbotron from './board/jumbotron';\nimport setupGreenBackdrop from './board/greenBackdrop';\nimport addStaticWalls from './walls/staticWalls';\nimport addBreakableWalls from './walls/breakableWalls';\nimport mainCharacter from './characters/mainCharacter';\nimport { getAllWalls } from './util/wallUtil';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  setupGreenBackdrop();\n  setupJumbotron();\n  addStaticWalls();\n  addBreakableWalls();\n  new mainCharacter(getAllWalls());\n});","export const getPossibleMoves = (walls, x, y) => {\n  const possibleMoves = [37, 38, 39, 40];\n  let dX = x - 50, dY = y;\n  \n  const checkCollision = (move) => {\n    if (walls[dX] && walls[dX].indexOf(dY) !== -1) {\n      possibleMoves.splice(possibleMoves.indexOf(move), 1);\n    }\n  }\n\n  checkCollision(37);\n  dX += 50;\n  dY -= 50;\n  checkCollision(38);\n  dX += 50;\n  dY += 50;\n  checkCollision(39);\n  dX -= 50;\n  dY += 50;\n  checkCollision(40);\n  return possibleMoves;\n}","const allWalls = {};\n\nexport const getAllWalls = () => allWalls;\n\nconst addToWalls = (pos) => {\n  allWalls[pos[0]] ? \n  allWalls[pos[0]].push(pos[1]) :\n  allWalls[pos[0]] = [pos[1]];\n\n  return pos;\n}\n\nexport const getHorizontalOuterWallPos = () => {\n  let y = 0, x;\n  return [...Array(42)].map((_, i) => {\n    if (i > 20) {\n      x = (i % 21) * 50;\n      y = 500;\n    } else {\n      x = i * 50;\n    }\n\n    return addToWalls([x, y]);\n  });\n};\n\nexport const getVerticalOuterWallPos = () => {\n  let x = 0, y;\n  return [...Array(18)].map((_, i) => {\n    if (i > 8) {\n      x = 1000;\n      y = (i % 9) * 50 + 50;\n    } else {\n      y = i * 50 + 50;\n    }\n\n    return addToWalls([x, y]);\n  });\n};\n\nexport const getInnerWallPos = () => {\n  let y = 100, x, divisor = 9;\n  return [...Array(36)].map((_, i) => {\n    if (i % 10 === divisor) {\n      divisor--;\n      y += 100;\n    } \n    x = (i % 9) * 100 + 100;\n    \n    return addToWalls([x, y]);\n  });\n};\n\nexport const getRandomBreakableWallPos = () => {\n  const allAvailablePos = getAllAvailablePos();\n  let breakableWallPos = [];\n  let i;\n  while (breakableWallPos.length < 31) {\n    i = Math.floor(Math.random() * allAvailablePos.length);\n    const randomPos = (allAvailablePos.splice(i, 1));\n    breakableWallPos.push(addToWalls(randomPos[0]));\n  }\n  return breakableWallPos;\n}\n\nconst Y_POS1 = [150, 200, 250, 300, 350, 400, 450];\nconst Y_POS2 = [150, 250, 350, 450];\nconst Y_POS3 = [50, 100, 150, 200, 250, 300, 350, 400, 450];\nconst Y_POS4 = [50, 150, 250, 350, 450];\nconst X_POS = [\n  50, 100, 150, 200, 250, 300, 350, 400, 450, 500,\n  550, 600, 650, 700, 750, 800, 850, 900, 950\n];\nconst getAllAvailablePos = () => {\n  const availablePos = [];\n  X_POS.forEach((x, i) => {\n    if (i < 1) {\n      Y_POS1.forEach(y => availablePos.push([x, y]));\n    } else if (i < 2) {\n      Y_POS2.forEach(y => availablePos.push([x, y]));\n    } else if (i % 2 === 0) {\n      Y_POS3.forEach(y => availablePos.push([x, y]));\n    } else {\n      Y_POS4.forEach(y => availablePos.push([x, y]));\n    }\n  });\n\n  return availablePos;\n};","import { getRandomBreakableWallPos } from '../util/wallUtil';\n\nexport default () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const img = new Image();\n  img.src = '../../public/gameImages/walls/breakableWall.png';\n\n  const breakableWallPos = getRandomBreakableWallPos();\n  img.addEventListener('load', () => {\n    breakableWallPos.forEach(pos => {\n      ctx.drawImage(img, pos[0], pos[1]);\n    });\n  });\n}","import {\n  getHorizontalOuterWallPos,\n  getVerticalOuterWallPos,\n  getInnerWallPos\n} from '../util/wallUtil';\n\nexport default () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const img = new Image();\n  img.src = '../../public/gameImages/walls/wall.png';\n\n  const staticWallPos = getHorizontalOuterWallPos()\n    .concat(getVerticalOuterWallPos())\n    .concat(getInnerWallPos());\n\n  img.addEventListener('load', () => {\n    staticWallPos.forEach(pos => {\n      ctx.drawImage(img, pos[0], pos[1]);\n    });\n  });\n}"],"sourceRoot":""}