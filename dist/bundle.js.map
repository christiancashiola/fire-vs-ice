{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/board/greenBackdrop.js","webpack:///./src/board/jumbotron.js","webpack:///./src/bombs/bomb.js","webpack:///./src/bombs/explosion.js","webpack:///./src/characters/moveMap.js","webpack:///./src/characters/player1.js","webpack:///./src/characters/player2.js","webpack:///./src/main.js","webpack:///./src/powerUps/powerUp.js","webpack:///./src/powerUps/shield.js","webpack:///./src/sounds/sound.js","webpack:///./src/traps/spikes.js","webpack:///./src/util/characterUtil.js","webpack:///./src/util/gameUtil.js","webpack:///./src/util/moveUtil.js","webpack:///./src/util/wallUtil.js","webpack:///./src/walls/breakableWalls.js","webpack:///./src/walls/staticWalls.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;ACLD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACM;;AAEpD;;AAEO;AACP;AACA,sBAAsB,sDAAO,GAAG,sDAAO;AACvC,SAAS,sCAAsC;;AAE/C;AACA;AACA,mBAAmB,kEAAe;AAClC;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACxB;AAC6B;AACH;AACI;AACR;;AAEzD;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI,6DAAc;AAClB,IAAI,+CAAS,cAAc,+CAAS;AACpC;AACA;AACA,IAAI,oEAAa;AACjB;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,MAAM,iEAAU;AAChB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,6C;AACA;AACA,EAAE,oEAAa;AACf;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,yC;AACA,QAAQ,4DAAU,qBAAqB,uEAAa;AACpD,QAAQ,0DAAS,qBAAqB,qEAAY;AAClD,QAAQ,sDAAQ,qBAAqB,kEAAY;AACjD;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC,mC;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,0DAAW,OAAO,0DAAW;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;;AAEsB;;;;;;;;;;;;;AC1GtB;AAAe;AACf,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;AAEA;AACA,C;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACd;AACY;AACO;AACV;AAMf;;AAEX;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,wDAAO;AACrD,KAAK;AACL;;AAEA;AACA,yBAAyB,sEAAe;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,iEAAO;AACf,MAAM,2DAAY;AAClB;AACA;AACA;AACA,QAAQ,+DAAM;AACd,MAAM,0DAAW;AACjB;AACA;AACA,K;AACA,wBAAwB,wDAAqB;AAC7C;AACA;AACA,QAAQ,4DAAM;AACd,MAAM,yDAAU;AAChB,MAAM,qEAAc;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,oDAAiB;AACrB;AACA;AACA;AACA,G;AACA,C;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACI;AACd;AACY;AACO;AACV;AAMf;;AAEX;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,wDAAO;AACrD,KAAK;AACL;;AAEA;AACA,yBAAyB,sEAAe;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,iEAAO;AACf,MAAM,2DAAY;AAClB;AACA;AACA;AACA,QAAQ,+DAAM;AACd,MAAM,0DAAW;AACjB;AACA;AACA,K;AACA,wBAAwB,wDAAqB;AAC7C;AACA;AACA,QAAQ,4DAAM;AACd,MAAM,yDAAU;AAChB,MAAM,qEAAc;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,oDAAiB;AACrB;AACA;AACA;AACA,G;AACA,C;;;;;;;;;;;;AClGA;AAAA;AAAsE;;AAEtE;AACA;AACA,EAAE,iEAAU;AACZ,EAAE,qEAAc;AAChB,EAAE,8DAAO;AACT,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;;AAE9D;;AAEO;;AAEP;AACA;AACA,8BAA8B,6DAAc;AAC5C;AACA,cAAc,6DAAc,+BAA+B,6DAAc;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,iEAAU;;AAEd;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;;AAE9D;;AAEO;;AAEP;AACA;AACA,8BAA8B,6DAAc;AAC5C;AACA,cAAc,6DAAc,+BAA+B,6DAAc;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,iEAAU;;AAEd;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;AC5CA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;;AAE9D;;AAEO;;AAEP;AACA;AACA,8BAA8B,6DAAc;AAC5C;AACA,cAAc,6DAAc,+BAA+B,6DAAc;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,iEAAU;;AAEd;AACA,GAAG;AACH;;AAEO;AACP;AACA;;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACoB;AACR;AACE;AACM;AACP;AACF;AACc;AACjB;AACA;AACA;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA,EAAE,oEAAkB;AACpB,EAAE,gEAAc;AAChB,EAAE,kEAAc;AAChB,EAAE,qEAAiB;AACnB,EAAE,oEAAU;AACZ,EAAE,kEAAS;AACX,EAAE,gEAAS;;AAEX,gBAAgB,2DAAO,CAAC,mEAAY;AACpC,gBAAgB,2DAAO,CAAC,mEAAY;AACpC;AACA;;AAEO;AACP,uBAAuB,qDAAK;AAC5B,oBAAoB,qDAAK;AACzB,qBAAqB,qDAAK;AAC1B,mBAAmB,qDAAK;AACxB,sBAAsB,qDAAK;AAC3B,cAAc,qDAAK;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;;AAEA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;;;;;;;;;;;;;ACxHA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACU;;;AAG7C;AACP;AACA;;AAEA;AACA,QAAQ,sDAAY,QAAQ,sDAAY;AACxC,OAAO,sDAAO,gBAAgB,sDAAO;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA,QAAQ,sDAAY,QAAQ,sDAAY;AACxC,OAAO,sDAAO,gBAAgB,sDAAO;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuB;AACvB,uBAAuB;AACvB,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,K;AACA;;AAEA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC5IA;AAAA;AAA6D;;AAE9C;AACf;AACA;AACA;AACA;;AAEA,2BAA2B,gFAAyB;AACpD;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;;;;;AChBA;AAAA;AAI0B;;AAEX;AACf;AACA;AACA;AACA;;AAEA,wBAAwB,gFAAyB;AACjD,YAAY,8EAAuB;AACnC,YAAY,sEAAe;;AAE3B;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA,GAAG;AACH,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export default () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  ctx.fillStyle = '#3B8314';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\n","export default () => {\n  const canvas = document.querySelector('#jumbotron');\n  if (canvas.getContext) {\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = '#DDD';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  } else {\n    // one time alert in case browser does not support canvas\n    alert(\n      'Sorry. This games only operates' +\n      'on browsers that support HTML canvas.'\n    );\n  }\n}","import { renderExplosion } from './explosion';\nimport { player1, player2 } from '../util/gameUtil';\n\nconst liveBombs = {};\n\nexport const dropBomb = id => {\n  let player;\n  player = id === 1 ? player1 : player2;\n  const { xPos, yPos, ctx, bombImg, bombPower } = player;\n\n  liveBombs[xPos] ? liveBombs[xPos].push(yPos) : liveBombs[xPos] = [yPos];\n  ctx.drawImage(bombImg, xPos, yPos);\n  setTimeout(() => renderExplosion(xPos, yPos, ctx, bombPower, id), 1500);\n}\n\nexport const containsBomb = (x, y) => {\n  if (liveBombs[x] && liveBombs[x].indexOf(y) !== -1) {\n    return true;\n  }\n  return false;\n};\n\nexport const getBombYVals = (x) => {\n  return liveBombs[x];\n}\n\nexport const getBombXVals = (y) => {\n  const xVals = Object.keys(liveBombs);\n  const bombXVals = [];\n  \n  let xVal, yVals;\n  for (let i = 0; i < xVals.length; i++) {\n    xVal = xVals[i];\n    yVals = liveBombs[xVal];\n    \n    for (let j = 0; j < yVals.length; j++) {\n      if (yVals[i] === y) {\n        bombXVals.push(xVal);\n      }\n    }\n  }\n  return bombXVals;\n}\n\nexport { liveBombs }; ","import { staticWalls, removeWall } from '../util/wallUtil';\nimport { liveBombs } from './bomb';\nimport { powerUpPos, renderPowerUp } from '../powerUps/powerUp';\nimport { shieldPos, renderShield } from '../powerUps/shield';\nimport { checkGameOver, explosionSound } from '../util/gameUtil';\nimport { renderSpikes, spikePos } from '../traps/spikes';\n\nconst liveAttack = {};\n\nexport const renderExplosion = (xPos, yPos, ctx, bombPower, id) => {\n  const attackImg = new Image();\n  if (id === 1) {\n    attackImg.src = 'public/gameImages/bombs/fire.png';\n  } else {\n    attackImg.src = 'public/gameImages/bombs/ice.png';\n  }\n  attackImg.addEventListener('load', () => {\n    explosionSound.play();\n    liveBombs[xPos].splice(liveBombs[xPos].indexOf(yPos), 1);\n    const spread = getSpread(xPos, yPos, bombPower);\n    spreadAttack(ctx, attackImg, spread);\n    checkGameOver(spread, 1);\n    setTimeout(() => coolDown(ctx, spread), 300);\n  });\n}\n\nconst getSpread = (x, y, bombPower) => {\n  const attack = getAttack(x, y, bombPower);\n  const spread = [];\n\n  let xPos, yPos;\n  for (let i = 0; i < attack.length; i++) {\n    [xPos, yPos] = attack[i];\n    if (checkAttack(xPos, yPos)) {\n      removeWall(xPos, yPos);\n      spread.push([xPos, yPos]);\n    } else {\n      // skip all attack going direction blocked by static wall\n      if ((i + 1) % (attack.length / 4) !== 0) i++;\n    }\n  }\n  spread.push([x, y]);\n  return spread;\n}\n\nconst spreadAttack = (ctx, attackImg, spread) => {\n  let pos;\n  for (let i = 0; i < spread.length; i++) {\n    pos = spread[i];\n    addToLiveAttack(pos);\n    ctx.drawImage(attackImg, pos[0], pos[1]);    \n  }\n  checkGameOver(liveAttack);\n}\n\nconst coolDown = (ctx, spread) => {\n  let pos;\n  for (let i = 0; i < spread.length; i++) {\n    pos = spread[i];\n    ctx.fillStyle = '#3B8314';\n    ctx.fillRect(pos[0], pos[1], 50, 50);  \n    if (powerUpPos[pos[0]] === pos[1]) renderPowerUp(pos[0], pos[1]);\n    if (shieldPos[pos[0]] === pos[1]) renderShield(pos[0], pos[1]);\n    if (spikePos[pos[0]] === pos[1]) renderSpikes(pos[0], pos[1]);\n  }\n};\n\nconst getAttack = (x, y, bombPower) => {\n  let attack = [];\n\n  // intentional so array is sorted based off of direction of attack\n  for (let i = 1; i < bombPower + 1; i++) {\n    attack.push([x - (50 * i), y]); \n  }\n  for (let i = 1; i < bombPower + 1; i++) {\n    attack.push([x + (50 * i), y]);\n  }\n  for (let i = 1; i < bombPower + 1; i++) {\n    attack.push([x, y - (50 * i)]);\n  }\n  for (let i = 1; i < bombPower + 1; i++) {\n    attack.push([x, y + (50 * i)]);\n  }\n\n  return attack;\n};\n\nconst checkAttack  = (x, y) => {\n  return (staticWalls[x] && staticWalls[x].indexOf(y) === -1);\n}\n\nconst addToLiveAttack = (pos) => {\n  let [x, y] = pos;\n  liveAttack[x] ? \n  liveAttack[x].push(y) :\n  liveAttack[x] = [y];\n};\n\nconst removeFromLiveAttack = spread => {\n  let x, y;\n  for (let i = 0; i < spread.length; i++) {\n    [x, y] = [spread[i][0], spread[i][0]];\n    liveAttack[x].splice(liveAttack[x].indexOf(y), 1);\n  }\n};\n\nexport { liveAttack };\n","export default (e, player) => {\n  const { left, right, back, front } = player;\n  if (e.keyCode === 81 && player.id === 1) return player.dropBomb();\n  if (e.keyCode === 79 && player.id === 2) return player.dropBomb();\n  if (!player.possibleMoves.includes(e.keyCode)) return;\n  switch(e.keyCode) {\n    case 65:\n      player.readyRender(left, -50, 0);\n      player.direction = 'W';\n      break;\n    case 87:\n      player.readyRender(back, 0, -50);\n      player.direction = 'N';\n      break;\n    case 68:\n      player.readyRender(right, 50, 0);\n      player.direction = 'E';\n      break;\n    case 83:\n      player.readyRender(front, 0, 50);\n      player.direction = 'S';\n      break;\n    case 74:\n      player.readyRender(left, -50, 0);\n      player.direction = 'W';\n      break;\n    case 73:\n      player.readyRender(back, 0, -50);\n      player.direction = 'N';\n      break;\n    case 76:\n      player.readyRender(right, 50, 0);\n      player.direction = 'E';\n      break;\n    case 75:\n      player.readyRender(front, 0, 50);\n      player.direction = 'S';\n      break;\n  } \n\n  player.getPossibleMoves();\n}","import * as bombUtil from '../bombs/bomb';\nimport { powerUp } from '../powerUps/powerUp';\nimport moveMap from './moveMap';\nimport { shield } from '../powerUps/shield';\nimport { getPlayer1Moves } from '../util/moveUtil';\nimport { spikes } from '../traps/spikes';\nimport { \n  shieldSound,\n  powerUpSound, \n  spikeSound,\n  evaluateWinner \n} from '../util/gameUtil';\n\nexport default class Player1 {\n  constructor(props) {\n    Object.assign(this, props);\n    this.addMovement();\n    this.bombSet = false;\n  }\n\n  addMovement() {\n    this.front.addEventListener('load', () => {\n      this.ctx.drawImage(this.front, this.xPos, this.yPos);\n      window.addEventListener(\"keydown\", e => moveMap(e, this));\n    });\n  }\n\n  getPossibleMoves() {\n    this.possibleMoves = getPlayer1Moves(this.xPos, this.yPos);\n  }\n\n  readyRender(image, dX, dY) {\n    const prevX = this.xPos, prevY = this.yPos;\n    this.ctx.fillStyle = '#3B8314';\n    this.ctx.fillRect(this.xPos, this.yPos, 50, 50);\n\n    if (this.currentImg === image) {\n      this.xPos += dX;\n      this.yPos += dY;\n    } else {\n      this.currentImg = image;\n    }\n\n    this.checkFooting(prevX, prevY);\n    this.render();\n  }\n\n  render() {\n    this.ctx.drawImage(this.currentImg, this.xPos, this.yPos);\n    if (this.shield) this.activateShield();\n  }\n\n  checkFooting(prevX, prevY) {\n    if (powerUp(this.xPos, this.yPos)) {\n      powerUpSound.play();\n      this.bombPower += 1;\n      this.reRender();\n    }\n    if (shield(this.xPos, this.yPos)) {\n      shieldSound.play();\n      this.shield = true;\n      this.reRender();\n    } \n    if (this.bombSet || bombUtil.containsBomb(prevX, prevY)) {\n      this.bombRender(prevX, prevY);\n    }\n    if (spikes(this.xPos, this.yPos)) {\n      spikeSound.play();\n      evaluateWinner(false, true);\n    }\n  }\n  \n  activateShield() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.xPos + 25, this.yPos + 25, 25, 0, 2 * Math.PI);\n    this.ctx.fillStyle = \"rgba(220, 220, 255, 0.5)\";\n    this.ctx.fill();\n  }\n\n  bombRender(prevX, prevY) {\n    this.ctx.drawImage(this.bombImg, prevX, prevY);\n    if (prevX !== this.xPos || prevY !== this.yPos) {\n      this.bombSet = false;\n    }\n  }\n\n  reRender() {\n    this.ctx.fillStyle = '#3B8314';\n    this.ctx.fillRect(this.xPos, this.yPos, 50, 50);\n    this.ctx.drawImage(this.currentImg, this.xPos, this.yPos);\n  }\n\n  dropBomb() {\n    bombUtil.dropBomb(this.id);\n    this.ctx.drawImage(this.currentImg, this.xPos, this.yPos);\n    this.bombSet = true;\n    this.getPossibleMoves();\n  }  \n}","import * as bombUtil from '../bombs/bomb';\nimport { powerUp } from '../powerUps/powerUp';\nimport moveMap from './moveMap';\nimport { shield } from '../powerUps/shield';\nimport { getPlayer2Moves } from '../util/moveUtil';\nimport { spikes } from '../traps/spikes';\nimport { \n  shieldSound,\n  powerUpSound, \n  spikeSound,\n  evaluateWinner \n} from '../util/gameUtil';\n\nexport default class Player2 {\n  constructor(props) {\n    Object.assign(this, props);\n    this.addMovement();\n    this.bombSet = false;\n  }\n\n  addMovement() {\n    this.front.addEventListener('load', () => {\n      this.ctx.drawImage(this.front, this.xPos, this.yPos);\n      window.addEventListener(\"keydown\", e => moveMap(e, this));\n    });\n  }\n\n  getPossibleMoves() {\n    this.possibleMoves = getPlayer2Moves(this.xPos, this.yPos);\n  }\n\n  readyRender(image, dX, dY) {\n    const prevX = this.xPos, prevY = this.yPos;\n    this.ctx.fillStyle = '#3B8314';\n    this.ctx.fillRect(this.xPos, this.yPos, 50, 50);\n\n    if (this.currentImg === image) {\n      this.xPos += dX;\n      this.yPos += dY;\n    } else {\n      this.currentImg = image;\n    }\n\n    this.checkFooting(prevX, prevY);\n    this.render();\n  }\n\n  render() {\n    this.ctx.drawImage(this.currentImg, this.xPos, this.yPos);\n    if (this.shield) this.activateShield();\n  }\n\n  checkFooting(prevX, prevY) {\n    if (powerUp(this.xPos, this.yPos)) {\n      powerUpSound.play();\n      this.bombPower += 1;\n      this.reRender();\n    }\n    if (shield(this.xPos, this.yPos)) {\n      shieldSound.play();\n      this.shield = true;\n      this.reRender();\n    } \n    if (this.bombSet || bombUtil.containsBomb(prevX, prevY)) {\n      this.bombRender(prevX, prevY);\n    }\n    if (spikes(this.xPos, this.yPos)) {\n      spikeSound.play();\n      evaluateWinner(true, false);\n    }\n  }\n\n  activateShield() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.xPos + 25, this.yPos + 25, 25, 0, 2 * Math.PI);\n    this.ctx.fillStyle = \"rgba(220, 220, 255, 0.5)\";\n    this.ctx.fill();\n  }\n\n  bombRender(prevX, prevY) {\n    this.ctx.drawImage(this.bombImg, prevX, prevY);\n    if (prevX !== this.xPos || prevY !== this.yPos) {\n      this.bombSet = false;\n    }\n  }\n\n  reRender() {\n    this.ctx.fillStyle = '#3B8314';\n    this.ctx.fillRect(this.xPos, this.yPos, 50, 50);\n    this.ctx.drawImage(this.currentImg, this.xPos, this.yPos);\n  }\n\n  dropBomb() {\n    bombUtil.dropBomb(this.id);\n    this.ctx.drawImage(this.currentImg, this.xPos, this.yPos);\n    this.bombSet = true;\n    this.getPossibleMoves();\n  }  \n}","import { loadSounds, addToggleSound, newGame } from './util/gameUtil';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // let the games begin.\n  loadSounds();\n  addToggleSound();\n  newGame();\n});\n","import { breakableWalls, removeWall } from '../util/wallUtil';\n\nlet powerUpPos = {};\n\nexport const addPowerUp = () => {\n\n  let i = 0;\n  while(i < 4) {\n    const walls = Object.keys(breakableWalls);\n    const x = walls[Math.floor(Math.random() * walls.length)];\n    const y = breakableWalls[x][Math.floor(Math.random() * breakableWalls[x].length)];\n    if (!powerUpPos[x]) {\n      powerUpPos[x] = y;\n      i++;\n    }\n  }\n};\n\nexport const renderPowerUp = (x, y) => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const powerUp = new Image();\n  powerUp.src = 'public/gameImages/powerUps/powerUp.png';\n\n  powerUp.addEventListener('load', () => {\n    ctx.fillRect(x, y, 50, 50);\n    ctx.fillStyle = '#3B8314';\n    removeWall(x, y);\n\n    ctx.drawImage(powerUp, x, y);\n  });\n}\n\nexport const powerUp = (x, y) => {\n  if (powerUpPos[x] === y) {\n    clearPowerUp(x, y);\n    return true;\n  }\n\n  return false;\n};\n\nexport const clearPowerUp = (x, y) => {\n  delete powerUpPos[x];\n};\n\nexport { powerUpPos };","import { breakableWalls, removeWall } from '../util/wallUtil';\n\nlet shieldPos = {};\n\nexport const addShield = () => {\n\n  let i = 0;\n  while(i < 2) {\n    const walls = Object.keys(breakableWalls);\n    const x = walls[Math.floor(Math.random() * walls.length)];\n    const y = breakableWalls[x][Math.floor(Math.random() * breakableWalls[x].length)];\n    if (!shieldPos[x]) {\n      shieldPos[x] = y;\n      i++;\n    }\n  }\n};\n\nexport const renderShield = (x, y) => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const shield = new Image();\n  shield.src = 'public/gameImages/powerUps/shield.png';\n\n  shield.addEventListener('load', () => {\n    ctx.fillRect(x, y, 50, 50);\n    ctx.fillStyle = '#3B8314';\n    removeWall(x, y);\n\n    ctx.drawImage(shield, x, y);\n  });\n}\n\nexport const shield = (x, y) => {\n  if (shieldPos[x] === y) {\n    clearShield(x, y);\n    return true;\n  }\n\n  return false;\n};\n\nexport const clearShield = (x, y) => {\n  delete shieldPos[x];\n};\n\nexport { shieldPos };","export default class Sound {\n  constructor(src) {\n    this.sound = document.createElement(\"audio\");\n    this.sound.src = src;\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n    document.body.appendChild(this.sound);\n    this.sound.volume = 0.025;\n    this.on = true;\n  }\n\n  play() {\n    this.sound.play();\n  }\n\n  stop() {\n    this.sound.pause();\n  }\n}","import { breakableWalls, removeWall } from '../util/wallUtil';\n\nlet spikePos = {};\n\nexport const addSpikes = () => {\n\n  let i = 0;\n  while(i < 4) {\n    const walls = Object.keys(breakableWalls);\n    const x = walls[Math.floor(Math.random() * walls.length)];\n    const y = breakableWalls[x][Math.floor(Math.random() * breakableWalls[x].length)];\n    if (!spikePos[x]) {\n      spikePos[x] = y;\n      i++;\n    }\n  }\n};\n\nexport const renderSpikes = (x, y) => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const spikes = new Image();\n  spikes.src = 'public/gameImages/traps/spikes.png';\n\n  spikes.addEventListener('load', () => {\n    ctx.fillRect(x, y, 50, 50);\n    ctx.fillStyle = '#3B8314';\n    removeWall(x, y);\n\n    ctx.drawImage(spikes, x, y);\n  });\n}\n\nexport const spikes = (x, y) => {\n  return spikePos[x] === y ? true : false;\n};\n\nexport { spikePos };","const player1front = new Image();\nconst player1back = new Image();\nconst player1lSide = new Image();\nconst player1rSide = new Image();\nconst bombImg = new Image();\nbombImg.src = 'public/gameImages/bombs/bomb.png';\nplayer1front.src = 'public/gameImages/characters/player1front.png';\nplayer1back.src = 'public/gameImages/characters/player1back.png';\nplayer1lSide.src = 'public/gameImages/characters/player1lSide.png';\nplayer1rSide.src = 'public/gameImages/characters/player1rSide.png';\n\nexport const player1State = (ctx) => ({\n  id: 1,\n  xPos: 50,\n  yPos: 50,\n  bombPower: 1,\n  bombImg,\n  front: player1front,\n  back: player1back,\n  left: player1lSide,\n  right: player1rSide,\n  currentImg: player1front,\n  direction: 'S',\n  ctx,\n  possibleMoves: [83, 68]\n});\n\nconst player2front = new Image();\nconst player2back = new Image();\nconst player2lSide = new Image();\nconst player2rSide = new Image();\nplayer2front.src = 'public/gameImages/characters/player2front.png';\nplayer2back.src = 'public/gameImages/characters/player2back.png';\nplayer2lSide.src = 'public/gameImages/characters/player2lSide.png';\nplayer2rSide.src = 'public/gameImages/characters/player2rSide.png';\n\nexport const player2State = (ctx) => ({\n  id: 2,\n  xPos: 650,\n  yPos: 450,\n  bombPower: 1,\n  bombImg,\n  front: player2front,\n  back: player2back,\n  left: player2lSide,\n  right: player2rSide,\n  currentImg: player2back,\n  direction: 'N',\n  ctx,\n  possibleMoves: [74, 73]\n});","import Sound from '../sounds/sound';\nimport setupGreenBackdrop from '../board/greenBackdrop';\nimport setupJumbotron from '../board/jumbotron';\nimport addStaticWalls from '../walls/staticWalls';\nimport addBreakableWalls from '../walls/breakableWalls';\nimport { addPowerUp } from '../powerUps/powerUp';\nimport { addShield } from '../powerUps/shield';\nimport { player1State, player2State } from './characterUtil';\nimport Player1 from '../characters/player1';\nimport Player2 from '../characters/player2';\nimport { addSpikes } from '../traps/spikes';\n\nlet explosionSound,\n    shieldSound, \n    player1, \n    player2,\n    powerUpSound,\n    spikeSound, \n    introSound, \n    gameOverSound,\n    music;\n\nexport const newGame = () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n\n  setupGreenBackdrop();\n  setupJumbotron();\n  addStaticWalls();\n  addBreakableWalls();\n  addPowerUp(ctx);\n  addShield(ctx);\n  addSpikes(ctx);\n\n  player1 = new Player1(player1State(ctx));\n  player2 = new Player2(player2State(ctx));\n  setTimeout(() => music.play(), 3000);\n}\n\nexport const loadSounds = () => {\n  explosionSound = new Sound('public/gameSounds/explosion.mp3');\n  shieldSound = new Sound('public/gameSounds/shield.mp3');\n  powerUpSound = new Sound('public/gameSounds/powerUp.mp3');\n  spikeSound = new Sound('public/gameSounds/spike.mp3');\n  gameOverSound = new Sound('public/gameSounds/gameOver.mp3');\n  music = new Sound('public/gameSounds/music.mp3');\n}\n\nexport const addToggleSound = () => {\n  const button = document.querySelector('button');\n  button.addEventListener('click', () => {\n    if (music.on) {\n      music.stop()\n      music.on = false;\n    } else {\n      music.play();\n      music.on = true;\n    }\n  });\n}\n\nexport const checkGameOver = (spread, checkNumber) => {\n  let p1Win = false, p2Win = false, pos;\n\n  if (checkNumber <= 6) {\n    setTimeout(() => checkGameOver(spread, ++checkNumber), 50)\n  }\n  for (let i = 0; i < spread.length; i++) {\n    pos = spread[i];\n\n    if (player1.xPos === pos[0] &&\n      player1.yPos === pos[1]) {\n        p2Win = checkShield(player1) ? false : true;\n    }\n    if (player2.xPos === pos[0] &&\n      player2.yPos === pos[1]) {\n        p1Win = checkShield(player2) ? false : true;\n    }\n  }\n\n  evaluateWinner(p1Win, p2Win);\n}\n\nexport const evaluateWinner = (p1Win, p2Win) => {\n  const billBoard = document.querySelector('.bill-board');\n  let innerText, color, gameOver;\n\n  if (p1Win && p2Win) {\n    innerText = 'TIE!';\n    color = 'white';\n  } else if (p1Win) {\n    innerText = 'FIRE WINS!';\n    color = '#fc8200';\n  } else if (p2Win) {\n    innerText = 'ICE WINS!';\n    color = '#8feafc';\n  } \n\n  gameOver = p1Win || p2Win ? true : false;\n  if (gameOver) {\n    music.stop();\n    gameOverSound.play();\n    billBoard.innerText = innerText;\n    billBoard.style.color = color;\n    billBoard.style.visibility = 'visible';\n    setTimeout(() => {\n      billBoard.style.visibility = 'hidden'; \n      window.location.reload();\n    }, 3000);\n  }\n}\n\nconst checkShield = player => {\n  if (player.shield) {\n    setTimeout(() => {\n      player.shield = false;\n      player.reRender.call(player)}, 325)\n    return true;\n  }\n  return false;\n}\n\nexport {\n  explosionSound,\n  shieldSound,\n  powerUpSound, \n  music,\n  player1,\n  player2,\n  spikeSound\n};","import { allWallsXToY } from './wallUtil';\nimport { player1, player2 } from '../util/gameUtil';\n\n\nexport const getPlayer1Moves = (x, y) => {\n  const possibleMoves = [65, 87, 68, 83];\n  let dX = x - 50, dY = y;\n\n  const checkCollision = (move) => {\n    if (allWallsXToY[dX] && allWallsXToY[dX].indexOf(dY) !== -1 ||\n      (player2.xPos === dX && player2.yPos === dY)) {\n      possibleMoves.splice(possibleMoves.indexOf(move), 1);\n    }\n  }\n\n  checkCollision(65);\n  dX += 50;\n  dY -= 50;\n  checkCollision(87);\n  dX += 50;\n  dY += 50;\n  checkCollision(68);\n  dX -= 50;\n  dY += 50;\n  checkCollision(83);\n  return possibleMoves;\n}\n\nexport const getPlayer2Moves = (x, y) => {\n  const possibleMoves = [74, 73, 76, 75];\n  let dX = x - 50, dY = y;\n  \n  const checkCollision = (move) => {\n    if (allWallsXToY[dX] && allWallsXToY[dX].indexOf(dY) !== -1 ||\n      (player1.xPos === dX && player1.yPos === dY)) {\n      possibleMoves.splice(possibleMoves.indexOf(move), 1);\n    }\n  }\n\n  checkCollision(74);\n  dX += 50;\n  dY -= 50;\n  checkCollision(73);\n  dX += 50;\n  dY += 50;\n  checkCollision(76);\n  dX -= 50;\n  dY += 50;\n  checkCollision(75);\n  return possibleMoves;\n}","const allWallsXToY = {}, \n      allWallsYToX = {},\n      breakableWalls = {}, \n      staticWalls = {};\n\nconst addToAllWalls = (pos) => {\n  allWallsXToY[pos[0]] ? \n  allWallsXToY[pos[0]].push(pos[1]) :\n  allWallsXToY[pos[0]] = [pos[1]];\n\n  allWallsYToX[pos[1]] ? \n  allWallsYToX[pos[1]].push(pos[0]) :\n  allWallsYToX[pos[1]] = [pos[0]];\n\n  return pos;\n}\n  \nconst addToBreakableWalls = pos => {\n  breakableWalls[pos[0]] ? \n  breakableWalls[pos[0]].push(pos[1]) :\n  breakableWalls[pos[0]] = [pos[1]];\n\n  return addToAllWalls(pos);\n}\n\nconst addToStaticWalls = pos => {\n  staticWalls[pos[0]] ? \n  staticWalls[pos[0]].push(pos[1]) :\n  staticWalls[pos[0]] = [pos[1]];\n\n  return addToAllWalls(pos);\n}\n\nexport const getHorizontalOuterWallPos = () => {\n  let y = 0, x;\n  return [...Array(36)].map((_, i) => {\n    if (i > 15) {\n      x = (i % 21) * 50;\n      y = 500;\n    } else {\n      x = i * 50;\n    }\n \n    return addToStaticWalls([x, y]);\n  });\n};\n\nexport const getVerticalOuterWallPos = () => {\n  let x = 0, y;\n  return [...Array(18)].map((_, i) => {\n    if (i > 8) {\n      x = 700;\n      y = (i % 9) * 50 + 50;\n    } else {\n      y = i * 50 + 50;\n    }\n\n    return addToStaticWalls([x, y]);\n  });\n};\n\nexport const getInnerWallPos = () => {\n  let y = 100, x, divisor = 6;\n  return [...Array(24)].map((_, i) => {\n    if (i % 7 === divisor) {\n      divisor--;\n      y += 100;\n    } \n    x = (i % 6) * 100 + 100;\n    \n    return addToStaticWalls([x, y]);\n  });\n};\n\nexport const getRandomBreakableWallPos = () => {\n  const allAvailablePos = getAllAvailablePos();\n  let breakableWallPos = [];\n  let i;\n  while (breakableWallPos.length < 30) {\n    i = Math.floor(Math.random() * allAvailablePos.length);\n    const randomPos = (allAvailablePos.splice(i, 1))[0];\n    breakableWallPos.push(addToBreakableWalls(randomPos));\n  }\n  return breakableWallPos;\n}\n\nconst Y_POS1 = [150, 200, 250, 300, 350, 400, 450];\nconst Y_POS2 = [150, 250, 350, 450];\nconst Y_POS3 = [50, 150, 250, 350];\nconst Y_POS4 = [50, 100, 150, 200, 250, 350, 400];\nconst Y_POS5 = [50, 100, 150, 200, 250, 300, 350, 400, 450];\nconst Y_POS6 = [50, 150, 250, 350, 450];\nconst X_POS = [\n  50, 100, 150, 200, 250, 300, 350, \n  400, 450, 500, 550, 600, 650\n];\nexport const getAllAvailablePos = () => {\n  const availablePos = [];\n\n  for (let i = 0; i < X_POS.length; i++) {\n    if (i < 1) {\n      availablePos.push(...zipXtoY(Y_POS1, X_POS[i]));\n    } else if (i < 2) {\n      availablePos.push(...zipXtoY(Y_POS2, X_POS[i]));\n    } else if (i > 10) {\n      availablePos.push(...zipXtoY(Y_POS3, X_POS[i]));\n    } else if (i > 11) {\n      availablePos.push(...zipXtoY(Y_POS4, X_POS[i]));\n    } else if (i % 2 === 0) {\n      availablePos.push(...zipXtoY(Y_POS5, X_POS[i]));\n    } else {\n      availablePos.push(...zipXtoY(Y_POS6, X_POS[i]));\n    }\n  }\n\n  return availablePos;\n};\n\nexport const removeWall = (x, y) => {\n  const wallGroup = [allWallsXToY, breakableWalls, staticWalls];\n\n  for (let i = 0; i < wallGroup.length; i++) {\n    let yIdx;\n\n    if (wallGroup[i][x]) yIdx = wallGroup[i][x].indexOf(y);\n    if (yIdx && yIdx !== -1) wallGroup[i][x].splice(yIdx, 1);\n  }\n\n  let xIdx;\n  if (allWallsYToX[y]) xIdx = allWallsYToX[y].indexOf(x);\n  if (xIdx && xIdx !== -1) allWallsYToX[y].splice(xIdx, 1);\n};\n\nconst zipXtoY = (yPos, x) => {\n  const zipped = []\n  for (let i = 0; i < yPos.length; i++) {\n    zipped.push([x, yPos[i]])\n  }\n\n  return zipped;\n};\n\nexport { \n  allWallsXToY,\n  allWallsYToX,\n  breakableWalls, \n  staticWalls \n};","import { getRandomBreakableWallPos } from '../util/wallUtil';\n\nexport default () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const img = new Image();\n  img.src = 'public/gameImages/walls/breakableWall.png';\n  \n  const breakableWallPos = getRandomBreakableWallPos();\n  img.addEventListener('load', () => {\n    let pos;\n    for (let i = 0; i < breakableWallPos.length; i++) {\n      pos = breakableWallPos[i];\n      ctx.drawImage(img, pos[0], pos[1]);\n    }\n  });\n}","import {\n  getHorizontalOuterWallPos,\n  getVerticalOuterWallPos,\n  getInnerWallPos\n} from '../util/wallUtil';\n\nexport default () => {\n  const canvas = document.querySelector('#green-backdrop');\n  const ctx = canvas.getContext('2d');\n  const img = new Image();\n  img.src = 'public/gameImages/walls/wall.png';\n\n  const staticWallPos = getHorizontalOuterWallPos()\n    .concat(getVerticalOuterWallPos())\n    .concat(getInnerWallPos());\n\n  img.addEventListener('load', () => {\n    let pos;\n    for (let i = 0; i < staticWallPos.length; i++) {\n      pos = staticWallPos[i];\n      ctx.drawImage(img, pos[0], pos[1]);\n    }\n  });\n}"],"sourceRoot":""}